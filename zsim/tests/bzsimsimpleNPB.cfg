// System with 16 OOO cores running a single process
// Private L2, and distributed 4-bank L3 both connected to the NoC
// DRAMSim2 is used for memory simulation

// The NoC is a 4x6 Mesh, with the netcoord of each cache and memory assigned based on that.
// Anynet has been used for this particular example, but a simple 'mesh' can also be utilized
// as long as the booksim config file is configured accordingly 

// The examples assumes the presence of the NPB benchmarks, but this can be easily modified.

sys = {
    cores = {
        simpleCore = {
            type = "OOO";
            cores = 16;
            dcache = "l1d";
            icache = "l1i";
        };
    };

    lineSize = 64;

    caches = {
        l1d = {
            caches = 16;
            size = 65536;
        };
        l1i = {
            caches = 16;
            size = 32768;
        };
        l2 = {
            caches = 16;
            size = 2097152;
            children = "l1i|l1d";
            netcoord = "0,0 0,1 0,4 0,5 1,0 1,1 1,4 1,5 2,0 2,1 2,4 2,5 3,0 3,1 3,4 3,5";
        };
        l3 = {
            caches = 1;
            banks = 4;
            size = 67108864;
            children = "noc0";
            netcoord = "1,2 1,3 2,2 2,3";
        };
    };

    
    noc = {
        nocSystemIni = "../booksim2/config/anynet.cfg"
	    # noc0 connects l2 and l3
        noc0 = {
            instances = 1; 
            interfaces = 4; # same as l3's number of banks
            parent = "l3";
            children = "l2";
        };
        noc1 = {
            instances = 1; 
            interfaces = 1; # always 1
            parent = "dram";
            children = "l3";
        };
    };

    mem = {
        outputDir = "..";
        controllers = 4;
        type = "DRAMSim";
    	techIni = "DRAMSim2/ini/DDR3_micron_64M_8B_x4_sg15.ini";
        systemIni = "DRAMSim2/system.ini.example";
        traceName = "DRAMSim2/traces";
        latency = 4;
        netcoord = "0,2 0,3 3,2 3,3";
    };
};

sim = {
    maxTotalInstrs = 10000000L;
    phaseLength = 10000;
    schedQuantum = 50;  // switch threads frequently
    procStatsFilter = "l1.*|l2.*";
};

process0 = {
    command = "../benchmarks/NPB3.4.2/NPB3.4-OMP/bin/is.S.x ";
};
